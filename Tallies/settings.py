"""
Django settings for Tallies project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os             # important for serving static files (css, javascript)
from decouple import config # used to keep secrets secret

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY') # Production key
# SECRET_KEY = 'django-insecure-q$#zbc8+el_**zt9e0=la)jku1j-!^f6f$mhdui43yrew7j8h1' # Development key


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
# ALLOWED_HOSTS = ['*']   ; use for EC2 instance server hosting


ROOT_URLCONF = 'Tallies.urls'                # IMPORTANT!!!! establish where the urls are stored at in  

LOGIN_URL= '/'
# Navigate the user during login or logout phase
LOGIN_REDIRECT_URL = '/blog/home'
LOGOUT_REDIRECT_URL = '/'
# Application definition



INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'blog',
    
    'storages',   # added after pip install django-storages ; disable for local static file use
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Tallies.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Tallies.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# These setting defines the base URL for serving media files uploaded by users. For example, if MEDIA_URL is set to 'media/', then USER-UPLOADED files will be served under URLs like http://example.com/media/.
MEDIA_URL = 'media/'    # For user uploaded images

MEDIA_ROOT = BASE_DIR / 'media'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/' # the base DIRECTORY/URL from which static files will be served.  For example, if STATIC_URL is set to '/static/', static files will be served under URLs like http://example.com/static/.

# LIST of directories where Django will look for static files in addition to the static directory
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]


# AWS CONFIGURATION  ; Done after django-packages and boto3 installed ; use for S3 storage ; disable for local static files
AWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID')
   # IAM user tallies1 
AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY')


# Basic Storage configuration for Amazon S3 (Irrespective of Django versions)

AWS_STORAGE_BUCKET_NAME = config('AWS_STORAGE_BUCKET_NAME') # - Enter your S3 bucket name HERE
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME  # string substitution
AWS_S3_FILE_OVERWRITE = False


# Uncomment For Production SERVER on EC2 instance :
# AWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID')
# AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY')
# AWS_STORAGE_BUCKET_NAME = config('AWS_STORAGE_BUCKET_NAME') # - Enter your S3 bucket name HERE
# AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
# AWS_S3_FILE_OVERWRITE = False
# S3_STATIC_DIR = 'static'
# STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{S3_STATIC_DIR}'
# STATICFILES_DIRS = [BASE_DIR / 'static', 'dev/MyCSS_Files', 'other_static_file_locations']   #strings representing additional directories from which static files will be collected during the collectstatic process. 


# Django 4.2 >
# once django-storages has been installed and the S3 bucket is up and running, this will work ; Done after django-packages and boto3 installed

#  use for S3 storage ; DISABLE for local static file use

STORAGES = {

    # Media file (image) management   actual files too 
    "default": {
        "BACKEND": "storages.backends.s3boto3.S3StaticStorage",
    },
    
    # CSS and JS file management
    "staticfiles": {
        "BACKEND": "storages.backends.s3boto3.S3StaticStorage",
    },
}

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
